{
  "results": {
    "tool": {
      "name": "jest"
    },
    "summary": {
      "tests": 128,
      "passed": 128,
      "failed": 0,
      "pending": 0,
      "skipped": 0,
      "other": 0,
      "start": 1749253374140,
      "stop": 1749253403542
    },
    "tests": [
      {
        "name": "OpenSearch Client Connection Management should report successful connection when cluster health is good",
        "duration": 15,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts > OpenSearch Client > Connection Management"
      },
      {
        "name": "OpenSearch Client Connection Management should report failed connection when cluster health check fails",
        "duration": 15,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts > OpenSearch Client > Connection Management"
      },
      {
        "name": "OpenSearch Client Index Management should create CTRF reports index if it does not exist",
        "duration": 4,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts > OpenSearch Client > Index Management"
      },
      {
        "name": "OpenSearch Client Index Management should not create CTRF reports index if it already exists",
        "duration": 0,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts > OpenSearch Client > Index Management"
      },
      {
        "name": "OpenSearch Client Index Management should throw an error if index check fails",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts > OpenSearch Client > Index Management"
      },
      {
        "name": "OpenSearch Client Index Management should throw an error if index creation fails",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts > OpenSearch Client > Index Management"
      },
      {
        "name": "OpenSearch Client Client Configuration should create a client with the correct configuration",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\opensearch.test.ts > OpenSearch Client > Client Configuration"
      },
      {
        "name": "Validation Schemas ErrorDetailsSchema Validation should validate a complete error details object",
        "duration": 12,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts > Validation Schemas > ErrorDetailsSchema Validation"
      },
      {
        "name": "Validation Schemas ErrorDetailsSchema Validation should validate with only required fields",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts > Validation Schemas > ErrorDetailsSchema Validation"
      },
      {
        "name": "Validation Schemas ErrorDetailsSchema Validation should reject invalid URL formats",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts > Validation Schemas > ErrorDetailsSchema Validation"
      },
      {
        "name": "Validation Schemas NetworkRequestSchema Validation should validate a complete network request object",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts > Validation Schemas > NetworkRequestSchema Validation"
      },
      {
        "name": "Validation Schemas NetworkRequestSchema Validation should validate with only required fields",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts > Validation Schemas > NetworkRequestSchema Validation"
      },
      {
        "name": "Validation Schemas NetworkRequestSchema Validation should reject invalid URL formats",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts > Validation Schemas > NetworkRequestSchema Validation"
      },
      {
        "name": "Validation Schemas NetworkRequestSchema Validation should reject invalid HTTP methods",
        "duration": 0,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\validationSchemas.test.ts > Validation Schemas > NetworkRequestSchema Validation"
      },
      {
        "name": "API Authentication Middleware Authentication Validation should return 401 when no authorization header is present",
        "duration": 50,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\apiAuth.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\apiAuth.test.ts > API Authentication Middleware > Authentication Validation"
      },
      {
        "name": "API Authentication Middleware Authentication Validation should return 401 when token is invalid",
        "duration": 17,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\apiAuth.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\apiAuth.test.ts > API Authentication Middleware > Authentication Validation"
      },
      {
        "name": "API Authentication Middleware Authorization Validation should return 403 when user lacks required role",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\apiAuth.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\apiAuth.test.ts > API Authentication Middleware > Authorization Validation"
      },
      {
        "name": "API Authentication Middleware Authorization Validation should call handler when user has required role",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\apiAuth.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\apiAuth.test.ts > API Authentication Middleware > Authorization Validation"
      },
      {
        "name": "CTRF Reports API Unit Tests POST /api/test-reports should store a valid CTRF report",
        "duration": 22,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > POST /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests POST /api/test-reports should generate reportId if missing",
        "duration": 3,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > POST /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests POST /api/test-reports should generate timestamp if missing",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > POST /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests POST /api/test-reports should return 400 for invalid report schema",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > POST /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests POST /api/test-reports should return 503 if OpenSearch connection fails (ECONNREFUSED)",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > POST /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests POST /api/test-reports should return 500 for other OpenSearch errors",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > POST /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests POST /api/test-reports should ensure index exists before storing",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > POST /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests GET /api/test-reports should retrieve reports with default pagination",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests GET /api/test-reports should handle custom pagination",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests GET /api/test-reports should limit max page size to 100",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests GET /api/test-reports should filter by status",
        "duration": 0,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests GET /api/test-reports should filter by tool name",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests GET /api/test-reports should filter by environment",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests GET /api/test-reports should combine multiple filters",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests GET /api/test-reports should return 503 if OpenSearch service unavailable on GET",
        "duration": 0,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests GET /api/test-reports should return 500 for other OpenSearch errors on GET",
        "duration": 0,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests GET /api/test-reports should handle OpenSearch index check failure gracefully on GET",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Unit Tests Unsupported Methods should return 405 for PUT requests",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Unsupported Methods"
      },
      {
        "name": "CTRF Reports API Unit Tests Unsupported Methods should return 405 for DELETE requests",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Unsupported Methods"
      },
      {
        "name": "CTRF Reports API Unit Tests Global Error Handling should return 500 if ensureCtrfReportsIndexExists throws an unexpected error",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Global Error Handling"
      },
      {
        "name": "CTRF Reports API Unit Tests Optional CTRF Fields Validation should handle tool version and URL fields",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Optional CTRF Fields Validation"
      },
      {
        "name": "CTRF Reports API Unit Tests Optional CTRF Fields Validation should validate test-level optional fields are preserved",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Optional CTRF Fields Validation"
      },
      {
        "name": "CTRF Reports API Unit Tests Security and Input Sanitization should handle XSS attempts in test names and messages",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Security and Input Sanitization"
      },
      {
        "name": "CTRF Reports API Unit Tests Security and Input Sanitization should reject oversized report payloads",
        "duration": 90,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Security and Input Sanitization"
      },
      {
        "name": "CTRF Reports API Unit Tests Security and Input Sanitization should handle special characters and Unicode in test data",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Security and Input Sanitization"
      },
      {
        "name": "CTRF Reports API Unit Tests Boundary Condition Testing should handle reports with maximum test count (1000+ tests)",
        "duration": 116,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Boundary Condition Testing"
      },
      {
        "name": "CTRF Reports API Unit Tests Boundary Condition Testing should handle extremely long test names",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Boundary Condition Testing"
      },
      {
        "name": "CTRF Reports API Unit Tests Boundary Condition Testing should handle zero duration tests",
        "duration": 6,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Boundary Condition Testing"
      },
      {
        "name": "CTRF Reports API Unit Tests Boundary Condition Testing should handle deeply nested extra fields",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Boundary Condition Testing"
      },
      {
        "name": "CTRF Reports API Unit Tests Data Integrity and Consistency should validate summary counts match actual test array",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Data Integrity and Consistency"
      },
      {
        "name": "CTRF Reports API Unit Tests Data Integrity and Consistency should handle reports with mismatched summary counts",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Data Integrity and Consistency"
      },
      {
        "name": "CTRF Reports API Unit Tests Data Integrity and Consistency should preserve timestamp ordering and consistency",
        "duration": 3,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\unit\\ctrf-reports.test.ts > CTRF Reports API Unit Tests > Data Integrity and Consistency"
      },
      {
        "name": "Authentication Integration Keycloak Token Service should successfully obtain an auth token for valid credentials",
        "duration": 19,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\auth.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\auth.test.ts > Authentication Integration > Keycloak Token Service"
      },
      {
        "name": "Authentication Integration Keycloak Token Service should throw an error when authentication fails",
        "duration": 24,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\auth.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\auth.test.ts > Authentication Integration > Keycloak Token Service"
      },
      {
        "name": "Authentication Integration Keycloak Token Service should include all required parameters in the token request",
        "duration": 3,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\auth.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\auth.test.ts > Authentication Integration > Keycloak Token Service"
      },
      {
        "name": "CTRF Reports API Integration Tests POST /api/test-reports should store a valid CTRF report successfully",
        "duration": 23,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > POST /api/test-reports"
      },
      {
        "name": "CTRF Reports API Integration Tests POST /api/test-reports should handle minimal CTRF report",
        "duration": 5,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > POST /api/test-reports"
      },
      {
        "name": "CTRF Reports API Integration Tests POST /api/test-reports should auto-generate reportId and timestamp if missing",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > POST /api/test-reports"
      },
      {
        "name": "CTRF Reports API Integration Tests POST /api/test-reports should reject invalid CTRF report with validation error",
        "duration": 3,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > POST /api/test-reports"
      },
      {
        "name": "CTRF Reports API Integration Tests POST /api/test-reports should handle OpenSearch connection errors",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > POST /api/test-reports"
      },
      {
        "name": "CTRF Reports API Integration Tests POST /api/test-reports should handle generic errors",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > POST /api/test-reports"
      },
      {
        "name": "CTRF Reports API Integration Tests GET /api/test-reports should retrieve CTRF reports successfully",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Integration Tests GET /api/test-reports should handle query filters for status",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Integration Tests GET /api/test-reports should handle query filters for tool and environment",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Integration Tests GET /api/test-reports should handle pagination parameters",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Integration Tests GET /api/test-reports should limit maximum page size",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Integration Tests GET /api/test-reports should handle OpenSearch connection errors for GET",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > GET /api/test-reports"
      },
      {
        "name": "CTRF Reports API Integration Tests Method validation should reject unsupported HTTP methods",
        "duration": 0,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > Method validation"
      },
      {
        "name": "CTRF Reports API Integration Tests Index creation should create OpenSearch index if it does not exist",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\ctrf-reports.test.ts > CTRF Reports API Integration Tests > Index creation"
      },
      {
        "name": "OpenSearch Client Configuration should create a properly configured OpenSearch client",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts > OpenSearch Client > Configuration"
      },
      {
        "name": "OpenSearch Client Health Check should check cluster health",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts > OpenSearch Client > Health Check"
      },
      {
        "name": "OpenSearch Client Health Check should handle health check errors",
        "duration": 29,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts > OpenSearch Client > Health Check"
      },
      {
        "name": "OpenSearch Client Index Creation should create CTRF reports index if it does not exist",
        "duration": 3,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts > OpenSearch Client > Index Creation"
      },
      {
        "name": "OpenSearch Client Index Creation should not create CTRF reports index if it already exists",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts > OpenSearch Client > Index Creation"
      },
      {
        "name": "OpenSearch Client Document Operations should index CTRF reports",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts > OpenSearch Client > Document Operations"
      },
      {
        "name": "OpenSearch Client Document Operations should search for CTRF reports",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\opensearch.test.ts > OpenSearch Client > Document Operations"
      },
      {
        "name": "API Endpoints CTRF Reports API should store a valid CTRF report via POST",
        "duration": 10,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\api.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\api.test.ts > API Endpoints > CTRF Reports API"
      },
      {
        "name": "API Endpoints CTRF Reports API should validate CTRF report structure",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\api.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\api.test.ts > API Endpoints > CTRF Reports API"
      },
      {
        "name": "API Endpoints CTRF Reports API should get CTRF reports via GET",
        "duration": 2,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\api.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\api.test.ts > API Endpoints > CTRF Reports API"
      },
      {
        "name": "API Endpoints CTRF Reports API should apply filters when getting CTRF reports",
        "duration": 6,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\api.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\api.test.ts > API Endpoints > CTRF Reports API"
      },
      {
        "name": "API Endpoints CTRF Reports API should reject unsupported methods",
        "duration": 1,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\api.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\integration\\api.test.ts > API Endpoints > CTRF Reports API"
      },
      {
        "name": "CTRF Reports API System Tests CTRF Report Storage should store a complete CTRF report successfully",
        "duration": 970,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > CTRF Report Storage"
      },
      {
        "name": "CTRF Reports API System Tests CTRF Report Storage should store a minimal CTRF report",
        "duration": 106,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > CTRF Report Storage"
      },
      {
        "name": "CTRF Reports API System Tests CTRF Report Storage should auto-generate missing reportId and timestamp",
        "duration": 112,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > CTRF Report Storage"
      },
      {
        "name": "CTRF Reports API System Tests CTRF Report Storage should handle reports with various test statuses",
        "duration": 117,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > CTRF Report Storage"
      },
      {
        "name": "CTRF Reports API System Tests CTRF Report Storage should handle reports with rich test metadata",
        "duration": 170,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > CTRF Report Storage"
      },
      {
        "name": "CTRF Reports API System Tests CTRF Report Retrieval should retrieve all reports without filters",
        "duration": 138,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > CTRF Report Retrieval"
      },
      {
        "name": "CTRF Reports API System Tests CTRF Report Retrieval should filter reports by test status",
        "duration": 95,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > CTRF Report Retrieval"
      },
      {
        "name": "CTRF Reports API System Tests CTRF Report Retrieval should filter reports by tool name",
        "duration": 85,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > CTRF Report Retrieval"
      },
      {
        "name": "CTRF Reports API System Tests CTRF Report Retrieval should filter reports by environment",
        "duration": 82,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > CTRF Report Retrieval"
      },
      {
        "name": "CTRF Reports API System Tests CTRF Report Retrieval should handle pagination",
        "duration": 93,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > CTRF Report Retrieval"
      },
      {
        "name": "CTRF Reports API System Tests CTRF Report Retrieval should respect maximum page size limit",
        "duration": 100,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > CTRF Report Retrieval"
      },
      {
        "name": "CTRF Reports API System Tests CTRF Report Retrieval should combine multiple filters",
        "duration": 320,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > CTRF Report Retrieval"
      },
      {
        "name": "CTRF Reports API System Tests Error Handling should reject invalid CTRF reports",
        "duration": 133,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > Error Handling"
      },
      {
        "name": "CTRF Reports API System Tests Error Handling should reject requests with missing required fields",
        "duration": 110,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > Error Handling"
      },
      {
        "name": "CTRF Reports API System Tests Error Handling should reject unsupported HTTP methods",
        "duration": 101,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > Error Handling"
      },
      {
        "name": "CTRF Reports API System Tests Error Handling should require authentication",
        "duration": 73,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > Error Handling"
      },
      {
        "name": "CTRF Reports API System Tests Performance and Scalability should handle large CTRF reports",
        "duration": 120,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > Performance and Scalability"
      },
      {
        "name": "CTRF Reports API System Tests Performance and Scalability should handle concurrent report submissions",
        "duration": 380,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > Performance and Scalability"
      },
      {
        "name": "CTRF Reports API System Tests Data Integrity should preserve all report data through storage and retrieval",
        "duration": 256,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\system\\ctrf-reports.test.ts > CTRF Reports API System Tests > Data Integrity"
      },
      {
        "name": "Registration Tests Registration and Auto-Login Flow should register a new user and automatically log them in",
        "duration": 2918,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\register.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\register.test.ts > Registration Tests > Registration and Auto-Login Flow"
      },
      {
        "name": "Registration Tests Registration and Auto-Login Flow should show error when registering with an existing email",
        "duration": 3473,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\register.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\register.test.ts > Registration Tests > Registration and Auto-Login Flow"
      },
      {
        "name": "Registration Tests Registration and Auto-Login Flow should validate password confirmation",
        "duration": 359,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\register.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\register.test.ts > Registration Tests > Registration and Auto-Login Flow"
      },
      {
        "name": "Authentication Tests Login Functionality should redirect to dashboard after successful login",
        "duration": 2207,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\login.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\login.test.ts > Authentication Tests > Login Functionality"
      },
      {
        "name": "Authentication Tests Login Functionality should show user as logged in after successful login",
        "duration": 1950,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\login.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\login.test.ts > Authentication Tests > Login Functionality"
      },
      {
        "name": "Authentication Tests Login Functionality should show error message with invalid credentials",
        "duration": 352,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\login.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\login.test.ts > Authentication Tests > Login Functionality"
      },
      {
        "name": "Authentication Tests Logout Functionality should redirect to login page after logout",
        "duration": 1587,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\login.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\login.test.ts > Authentication Tests > Logout Functionality"
      },
      {
        "name": "Authentication Tests Logout Functionality should show user as logged out after logout",
        "duration": 1503,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\login.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\login.test.ts > Authentication Tests > Logout Functionality"
      },
      {
        "name": "Navigation Tests Owner user navigation should navigate from dashboard to user management page",
        "duration": 2318,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\navigation.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\navigation.test.ts > Navigation Tests > Owner user navigation"
      },
      {
        "name": "Navigation Tests Owner user navigation should navigate from user management back to dashboard",
        "duration": 2140,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\navigation.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\navigation.test.ts > Navigation Tests > Owner user navigation"
      },
      {
        "name": "Navigation Tests Owner user navigation should successfully logout and redirect to login page",
        "duration": 1598,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\navigation.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\navigation.test.ts > Navigation Tests > Owner user navigation"
      },
      {
        "name": "Navigation Tests Unauthenticated user navigation should redirect to login page when accessing dashboard",
        "duration": 280,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\navigation.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\navigation.test.ts > Navigation Tests > Unauthenticated user navigation"
      },
      {
        "name": "Navigation Tests Unauthenticated user navigation should redirect to login page when accessing user management",
        "duration": 310,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\navigation.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\navigation.test.ts > Navigation Tests > Unauthenticated user navigation"
      },
      {
        "name": "Navigation Tests Maintainer user navigation should redirect to unauthorized page when accessing admin pages",
        "duration": 1643,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\navigation.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\navigation.test.ts > Navigation Tests > Maintainer user navigation"
      },
      {
        "name": "Role-based Access Tests Read-only User Access should see correct role assignment",
        "duration": 2256,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Read-only User Access"
      },
      {
        "name": "Role-based Access Tests Read-only User Access should not have content editing permissions",
        "duration": 1876,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Read-only User Access"
      },
      {
        "name": "Role-based Access Tests Read-only User Access should not see admin actions on dashboard",
        "duration": 1576,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Read-only User Access"
      },
      {
        "name": "Role-based Access Tests Read-only User Access should not have admin menu access",
        "duration": 1491,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Read-only User Access"
      },
      {
        "name": "Role-based Access Tests Read-only User Access should be denied access to user management page",
        "duration": 1621,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Read-only User Access"
      },
      {
        "name": "Role-based Access Tests Maintainer User Access should see correct role assignments",
        "duration": 1459,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Maintainer User Access"
      },
      {
        "name": "Role-based Access Tests Maintainer User Access should have content editing permissions",
        "duration": 1469,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Maintainer User Access"
      },
      {
        "name": "Role-based Access Tests Maintainer User Access should not see admin actions on dashboard",
        "duration": 1467,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Maintainer User Access"
      },
      {
        "name": "Role-based Access Tests Maintainer User Access should not have admin menu access",
        "duration": 1462,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Maintainer User Access"
      },
      {
        "name": "Role-based Access Tests Maintainer User Access should be denied access to user management page",
        "duration": 1639,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Maintainer User Access"
      },
      {
        "name": "Role-based Access Tests Owner User Access should see correct role assignments",
        "duration": 1457,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Owner User Access"
      },
      {
        "name": "Role-based Access Tests Owner User Access should have content editing permissions",
        "duration": 1449,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Owner User Access"
      },
      {
        "name": "Role-based Access Tests Owner User Access should see admin actions on dashboard",
        "duration": 1463,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Owner User Access"
      },
      {
        "name": "Role-based Access Tests Owner User Access should have admin menu access",
        "duration": 1493,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Owner User Access"
      },
      {
        "name": "Role-based Access Tests Owner User Access should have access to user management page",
        "duration": 1604,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Owner User Access"
      },
      {
        "name": "Role-based Access Tests Owner User Access should see all users listed in user management",
        "duration": 1624,
        "status": "passed",
        "rawStatus": "passed",
        "type": "unit",
        "filePath": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts",
        "retries": 0,
        "flaky": false,
        "suite": "C:\\Users\\mokey\\source\\ScaledTest\\tests\\ui\\role-access.test.ts > Role-based Access Tests > Owner User Access"
      }
    ],
    "environment": {
      "appName": "ScaledTest",
      "appVersion": "1.0.0"
    }
  }
}
