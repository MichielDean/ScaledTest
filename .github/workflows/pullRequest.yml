name: Pull Request Validation

# The following permissions are required for this workflow:
# - `contents: read` is needed to fetch repository contents for the build and test steps.
# - `pull-requests: write` is needed to update pull request statuses and post comments.
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      # Required Better Auth configuration
      BETTER_AUTH_SECRET: test-secret-key-for-ci-environment-32-chars
      BETTER_AUTH_URL: http://localhost:3000
      NEXT_PUBLIC_BASE_URL: http://localhost:3000

      # Database configuration
      DATABASE_URL: postgresql://scaledtest:password@localhost:5432/auth

      # Test users
      TEST_API_USERNAME: maintainer@example.com
      TEST_API_PASSWORD: Maintainer123!

      # TimescaleDB configuration
      TIMESCALEDB_HOST: localhost
      TIMESCALEDB_PORT: 5432
      TIMESCALEDB_DATABASE: scaledtest
      TIMESCALEDB_USERNAME: scaledtest
      TIMESCALEDB_PASSWORD: password

      # Required OpenSearch configuration
      OPENSEARCH_HOST: http://localhost:9200
      OPENSEARCH_USERNAME: admin
      OPENSEARCH_PASSWORD: admin
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies
        run: npm ci

      - name: Run all tests
        run: npm run test
